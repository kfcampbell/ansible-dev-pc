- name: git (customization)
  hosts: 127.0.0.1
  connection: local

  tasks:
    - name: Download bash-git-prompt
      git:
        repo: https://github.com/magicmonty/bash-git-prompt
        dest: ~/.bash-git-prompt

    - name: Enable bash-git-prompt
      blockinfile:
        path: ~/.bashrc
        marker: "### {mark} Ansible managed: Enable bash-git-prompt"
        block: |
          GIT_PROMPT_THEME=Default
          GIT_PROMPT_FETCH_REMOTE_STATUS=0

          source ~/.bash-git-prompt/gitprompt.sh
          source ~/.bash-git-prompt/prompt-colors.sh

    - name: Add bash-git-prompt customization
      blockinfile:
        path: ~/.bashrc
        marker: "### {mark} Ansible managed: bash-git-prompt customization"
        block: |
          function echoError() {
            echo -ne "\033[38;5;0;48;5;131m\033[38;5;227m  ${1} \033[38;5;131;48;5;0m"
          }

          function echoKubeContext() {
            if [ -z "${PRIVATE_PROMPT}" ]; then
              if which kubectl > /dev/null; then
                CURRENT_CONTEXT=$(kubectl config current-context 2>/dev/null)
                if [[ ${CURRENT_CONTEXT} != "" ]]; then
                  echo -ne "\033[38;5;0;48;5;242m\033[38;5;112m  \033[38;5;254m${CURRENT_CONTEXT} \033[38;5;242;48;5;0m"
                fi
              fi
            fi
          }

          function echoAksAccount() {
            if [ -z "${PRIVATE_PROMPT}" ]; then
              if [ -f ~/.azure/clouds.config ]; then
                if which gsed > /dev/null; then
                  CURRENT_SUB=$(gsed -nr "/^\[AzureCloud\]/ { :l /^subscription[ ]*=/ { s/.*=[ ]*//; p; q;}; n; b l;}" ~/.azure/clouds.config)
                else
                  CURRENT_SUB=$(sed -nr "/^\[AzureCloud\]/ { :l /^subscription[ ]*=/ { s/.*=[ ]*//; p; q;}; n; b l;}" ~/.azure/clouds.config)
                fi
                if [[ ${CURRENT_SUB} != "" ]]; then
                  CURRENT_ACCOUNT=$(cat ~/.azure/azureProfile.json | jq -r ".subscriptions[] | select(.id==\"${CURRENT_SUB}\") | .name")
                  if [[ ${CURRENT_ACCOUNT} != "" ]]; then
                    echo -ne "\033[38;5;0;48;5;30m\033[38;5;227m  \033[38;5;254m${CURRENT_ACCOUNT} \033[38;5;30;48;5;0m"
                  fi
                fi
              fi
            fi
          }

          function echoRubyVersion() {
            if which ruby > /dev/null; then
              CURRENT_RUBY=$(ruby --version | awk '{ print $2; exit; }')
              echo -ne "\033[38;5;0;48;5;52m\033[38;5;210m  \033[38;5;254m${CURRENT_RUBY} \033[38;5;52;48;5;0m"
            fi
          }

          function echoGoVersion() {
            if which go > /dev/null; then
              CURRENT_GO=$(go version | awk '{print $3; exit;}' | cut -c3-)
              echo -ne "\033[38;5;0;48;5;80m\033[38;5;16m  ${CURRENT_GO} \033[38;5;80;48;5;0m"
            fi
          }

          function echoDotNetVersion() {
            if which dotnet > /dev/null; then
              CURRENT_DOTNET=$(dotnet --version)
              echo -ne "\033[38;5;0;48;5;54m\033[38;5;231m  ${CURRENT_DOTNET} \033[38;5;54;48;5;0m"
            fi
          }

          function echoPath() {
            echo -ne "\033[38;5;0;48;5;28m\033[38;5;227m  \033[38;5;254m$(dirs +0) \033[38;5;28;48;5;0m"
          }

          function echoColor() {
            echo -ne "\033[48;5;${1};38;5;${2}m"
          }

          # Configuration
          GIT_PROMPT_SHOW_UNTRACKED_FILES="all"
          GIT_PROMPT_IGNORE_STASH="1"
          GIT_PROMPT_LEADING_SPACE="0"

          # Pre- and post-status prompt strings
          GIT_PROMPT_COMMAND_FAIL=" \`echoError _LAST_COMMAND_STATE_\`"
          GIT_PROMPT_COMMAND_OK=" "
          GIT_PROMPT_START_USER="${ResetColor}_LAST_COMMAND_INDICATOR_\`echoRubyVersion\`\`echoGoVersion\`\`echoDotNetVersion\`\`echoKubeContext\`\`echoAksAccount\`"
          GIT_PROMPT_START_ROOT="${GIT_PROMPT_START_USER}"
          GIT_PROMPT_END_USER="\`echoPath\`${ResetColor} \n${BoldGreen} sh$ ${ResetColor}"
          GIT_PROMPT_END_ROOT="\`echoPath\`${ResetColor} \n${BoldRed} sh# ${ResetColor}"

          # Individual overrides
          GIT_PROMPT_BRANCH="\`echoColor 25 110\`\`echoColor 25 254\` "
          GIT_PROMPT_CHANGED="\`echoColor 25 227\` ~"
          GIT_PROMPT_CLEAN=""
          GIT_PROMPT_CONFLICTS="\`echoColor 25 210\`  "
          GIT_PROMPT_PREFIX="\`echoColor 25 0\` "
          GIT_PROMPT_REMOTE=""
          GIT_PROMPT_SEPARATOR=""
          GIT_PROMPT_STAGED="\`echoColor 25 113\` ±"
          GIT_PROMPT_STASHED="\`echoColor 25 110\`  "
          GIT_PROMPT_SUFFIX="\`echoColor 25 0\` "
          GIT_PROMPT_UNTRACKED="\`echoColor 25 227\` +"

          # Symbols
          GIT_PROMPT_SYMBOLS_AHEAD="\`echoColor 25 110\` "
          GIT_PROMPT_SYMBOLS_BEHIND="\`echoColor 25 110\` "
          GIT_PROMPT_SYMBOLS_NO_REMOTE_TRACKING="\`echoColor 25 227\` "
          GIT_PROMPT_SYMBOLS_PREHASH=":"
